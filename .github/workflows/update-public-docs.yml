---
name: Update public docs

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - CI
    branches:
      - main
    status:
      - completed
  push:
    branches: autogenerate-docs-testing

jobs:
  update-public-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - uses: extractions/setup-just@v1

      - name: Generate new public docs file
        run: just generate-docs new_public_docs.json

      # - name: Get latest release
      #   id: latest_release
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       result = await github.rest.repos.getLatestRelease({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #       })
      #       console.log(result.data)


      # - name: Check if docs have changed
      #   id: check_docs
      #   run: |
      #     echo "::set-output name=DOCS_CHANGED::$(cmp new_public_docs.json documentation/public_docs.json)"

      - name: Create Release
        id: create-release
        # if: ${{ steps.check_docs.outputs.DOCS_CHANGED }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: docs-metadata-${{ github.sha }}
          release_name: Databuilder public docs metadata for ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        # if: ${{ steps.check_docs.outputs.DOCS_CHANGED }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./new_public_docs.json
          asset_name: public_docs.json
          asset_content_type: application/json

      # - name: Trigger update in docs repo
      #   if: ${{ steps.check_docs.outputs.DOCS_CHANGED }}
      #   uses: actions/github-script@v6
      #   env:
      #     DOWNLOAD_URL: ${{ steps.upload-release-asset.outputs.browser_download_url }}
      #     GITHUB_SHA: ${{ github.sha }}
      #   with:
      #     github-token: ${{ secrets.DOCS_WRITE_TOKEN }}
      #     script: |
      #       const { DOWNLOAD_URL, GITHUB_SHA } = process.env
      #       await github.rest.actions.createWorkflowDispatch({
      #         owner: 'opensafely',
      #         repo: 'documentation',
      #         workflow_id: 'update_databuilder_docs.yml',
      #         ref: 'main',
      #         inputs: {'download_url': DOWNLOAD_URL, 'branch_tag': GITHUB_SHA}
      #       })
