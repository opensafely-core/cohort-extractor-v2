---
name: CI

on:
  push:

jobs:
  check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: extractions/setup-just@v1
      - name: Check formatting, linting and import sorting
        run: ./scripts/do check

  test:
    needs: [check]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.9"
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: extractions/setup-just@v1
      - name: Run tests
        env:
          CI: 1
        run: ./scripts/do test

  lint-dockerfile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          failure-threshold: error

  docker-publish:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test, lint-dockerfile]
    env:
      image: ghcr.io/opensafely-core/cohortextractor-v2:latest
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile --tag ${{ env.image }}
      - name: Log into GitHub Container Registry
        run: docker login https://ghcr.io -u ${{ github.actor }} --password ${{ secrets.DOCKER_RW_TOKEN }}
      - name: Push image to GitHub Container Registry
        run: docker push ${{ env.image }}
